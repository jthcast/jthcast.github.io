{"version":3,"sources":["components/atoms/PrismCode/index.tsx","data/CodesData/1.tsx"],"names":["PrismCode","code","language","plugins","ref","useRef","useEffect","current","Prism","highlightElement","className","join","trim","Item","role","aria-label","href"],"mappings":"wLA6CeA,G,mCA1BG,SAAC,GAIa,IAH9BC,EAG6B,EAH7BA,KAG6B,IAF7BC,gBAE6B,MAFlB,aAEkB,EAD7BC,EAC6B,EAD7BA,QAEMC,EAAMC,iBAAoB,MAOhC,OALAC,qBAAU,WACJF,EAAIG,SACNC,IAAMC,iBAAiBL,EAAIG,WAE5B,IAED,qBAAKG,UAAWP,GAAWA,EAAQQ,KAAK,KAAxC,SACE,sBACEP,IAAKA,EACLM,UAAS,mBAAcR,GAAd,OACPC,EAAO,WAAOA,EAAQQ,KAAK,MAAS,IAHxC,SAMGV,GAAQA,EAAKW,aCYPC,UAhDF,WA4BX,OACE,qCACE,cAAC,EAAD,CAAWZ,KA7BL,+nBA6BiBC,SAAS,QAChC,oDAC0B,IACxB,sBAAMY,KAAK,MAAMC,aAAW,QAA5B,6BAIF,sDACuB,mBAAGC,KAAK,6BAAR,0BAEvB,qDACsB,sBAAMN,UAAU,WAAhB,wBAEtB","file":"static/js/1.1fd7d68a.chunk.js","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport Prism from 'prismjs';\nimport 'prismjs/components/prism-css-extras';\nimport 'prismjs/components/prism-scss';\nimport 'prismjs/components/prism-typescript';\n// import 'prismjs/components/prism-jsx';\n// import 'prismjs/components/prism-tsx';\n// import 'prismjs/plugins/line-numbers/prism-line-numbers';\n// import 'prismjs/plugins/line-numbers/prism-line-numbers.css';\nimport 'prismjs/themes/prism-tomorrow.css';\n// import './prism-vsc-dark-plus.scss';\nimport './PrismCode.scss';\n\ninterface IPrismCode {\n  code?: string;\n  language?: string;\n  plugins?: Array<string>;\n}\n\nconst PrismCode = ({\n  code,\n  language = 'typescript',\n  plugins,\n}: IPrismCode): JSX.Element => {\n  const ref = useRef<HTMLElement>(null);\n\n  useEffect(() => {\n    if (ref.current) {\n      Prism.highlightElement(ref.current);\n    }\n  }, []);\n  return (\n    <pre className={plugins && plugins.join(' ')}>\n      <code\n        ref={ref}\n        className={`language-${language}${\n          plugins ? ` ${plugins.join(' ')}` : ''\n        }`}\n      >\n        {code && code.trim()}\n      </code>\n    </pre>\n  );\n};\n\nexport default PrismCode;\n","import React from 'react';\nimport PrismCode from '../../components/atoms/PrismCode';\n\nconst Item = (): JSX.Element => {\n  const code = `import React from 'react';\nimport PrismCode from '../../components/atoms/PrismCode';\n\nconst PostItem = (): JSX.Element => {\n  const code = \\`\\`;\n  return (\n    <>\n      <PrismCode code={code} language=\"tsx\" />\n      <h2>\n        Let&apos;s postsing YAY{' '}\n        <span role=\"img\" aria-label=\"smile\">\n          üòÅ\n        </span>\n      </h2>\n      <p>\n        This is Example Page <a href=\"https://github.com/jthcast\">My Github</a>\n      </p>\n      <p>\n        Code type like this <code className=\"jth-text\">jthcast</code>\n      </p>\n      <p>End.</p>\n    </>\n  );\n};\n\nexport default PostItem;\n`;\n  return (\n    <>\n      <PrismCode code={code} language=\"tsx\" />\n      <h2>\n        Let&apos;s postsing YAY{' '}\n        <span role=\"img\" aria-label=\"smile\">\n          üòÅ\n        </span>\n      </h2>\n      <p>\n        This is Example Page <a href=\"https://github.com/jthcast\">My Github</a>\n      </p>\n      <p>\n        Code type like this <code className=\"jth-text\">jthcast</code>\n      </p>\n      <p>End.</p>\n    </>\n  );\n};\n\nexport default Item;\n"],"sourceRoot":""}